//program to find mean,max and min using dynamic memory
#include <iostream>
#include <cstdlib>
using namespace std;
int array_input(int [], int);
int array_sum(int[],int);
float array_mean(int[],int);
int array_max(int[],int);
int array_min(int[],int);
int main(){
    int* p;
    int n,max,min,n_p;
    float mean;
    
    p = new int[n];//allocating from heap
    
    cout<<"length of array: ";
    cin>>n;
    
    //calling the functions
    n_p = array_input(p,n);
    mean = array_mean(p,n_p);
    max = array_max(p,n_p);
    min = array_min(p,n_p);
    
    //printing the outputs
    cout<<"mean of arrays: "<<mean<<endl;
    cout<<"max of arrays: "<<max<<endl;
    cout<<"min of arrays: "<<min;
    
    delete[] p; //dellocating from heap
    return 0;
    
}
//function to take inputs into array
int array_input(int *a, int n){
    
    int i;
    for(i = 0; i < n; i = i + 1){

        a[i] = rand()%100;//random number input
    }
    for(i = 0; i < n; i = i + 1){
        cout<<"p["<<i<<"]: "<<a[i]<<endl;
    }
    return n;
}
//function to calculate the mean
float array_mean(int *a, int n){
    int i;
    float mean;
    for(i = 0; i < n; i = i + 1){
        mean = 1.0*array_sum(a,n)/n;
    }
    return mean;
}
//function to calculate the sum 
int array_sum(int *a, int n){
    int i,sum;
    sum = 0;
    for(i = 0; i < n; i = i + 1){
        sum = sum + a[i];
    }
    return sum;
}
//function to find the maximum from the given array
int array_max(int *a, int n){
    int i, maximum;
    maximum = a[0];
    for(i = 0; i < n; i = i + 1){
        if( a[i] > maximum){
            maximum = a[i];
        }
    }
    return maximum;
}
//function to find the minimum from the given array
int array_min(int *a, int n){
    int i, minimum;
    minimum = a[0];
    for(i = 0; i < n; i = i + 1){
        if( a[i] < minimum){
            minimum = a[i];
        }
    }
    return minimum;
}
